/*
Copyright Sparebanken Vest

Based on the Kubernetes controller example at
https://github.com/kubernetes/sample-controller

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v2alpha1

import (
	v2alpha1 "github.com/SparebankenVest/azure-key-vault-to-kubernetes/pkg/k8s/apis/azurekeyvault/v2alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureKeyVaultSecretIdentityLister helps list AzureKeyVaultSecretIdentities.
type AzureKeyVaultSecretIdentityLister interface {
	// List lists all AzureKeyVaultSecretIdentities in the indexer.
	List(selector labels.Selector) (ret []*v2alpha1.AzureKeyVaultSecretIdentity, err error)
	// AzureKeyVaultSecretIdentities returns an object that can list and get AzureKeyVaultSecretIdentities.
	AzureKeyVaultSecretIdentities(namespace string) AzureKeyVaultSecretIdentityNamespaceLister
	AzureKeyVaultSecretIdentityListerExpansion
}

// azureKeyVaultSecretIdentityLister implements the AzureKeyVaultSecretIdentityLister interface.
type azureKeyVaultSecretIdentityLister struct {
	indexer cache.Indexer
}

// NewAzureKeyVaultSecretIdentityLister returns a new AzureKeyVaultSecretIdentityLister.
func NewAzureKeyVaultSecretIdentityLister(indexer cache.Indexer) AzureKeyVaultSecretIdentityLister {
	return &azureKeyVaultSecretIdentityLister{indexer: indexer}
}

// List lists all AzureKeyVaultSecretIdentities in the indexer.
func (s *azureKeyVaultSecretIdentityLister) List(selector labels.Selector) (ret []*v2alpha1.AzureKeyVaultSecretIdentity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2alpha1.AzureKeyVaultSecretIdentity))
	})
	return ret, err
}

// AzureKeyVaultSecretIdentities returns an object that can list and get AzureKeyVaultSecretIdentities.
func (s *azureKeyVaultSecretIdentityLister) AzureKeyVaultSecretIdentities(namespace string) AzureKeyVaultSecretIdentityNamespaceLister {
	return azureKeyVaultSecretIdentityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureKeyVaultSecretIdentityNamespaceLister helps list and get AzureKeyVaultSecretIdentities.
type AzureKeyVaultSecretIdentityNamespaceLister interface {
	// List lists all AzureKeyVaultSecretIdentities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v2alpha1.AzureKeyVaultSecretIdentity, err error)
	// Get retrieves the AzureKeyVaultSecretIdentity from the indexer for a given namespace and name.
	Get(name string) (*v2alpha1.AzureKeyVaultSecretIdentity, error)
	AzureKeyVaultSecretIdentityNamespaceListerExpansion
}

// azureKeyVaultSecretIdentityNamespaceLister implements the AzureKeyVaultSecretIdentityNamespaceLister
// interface.
type azureKeyVaultSecretIdentityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureKeyVaultSecretIdentities in the indexer for a given namespace.
func (s azureKeyVaultSecretIdentityNamespaceLister) List(selector labels.Selector) (ret []*v2alpha1.AzureKeyVaultSecretIdentity, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v2alpha1.AzureKeyVaultSecretIdentity))
	})
	return ret, err
}

// Get retrieves the AzureKeyVaultSecretIdentity from the indexer for a given namespace and name.
func (s azureKeyVaultSecretIdentityNamespaceLister) Get(name string) (*v2alpha1.AzureKeyVaultSecretIdentity, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v2alpha1.Resource("azurekeyvaultsecretidentity"), name)
	}
	return obj.(*v2alpha1.AzureKeyVaultSecretIdentity), nil
}
